#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.10.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2537912128445620253) {
   out_2537912128445620253[0] = 0;
   out_2537912128445620253[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2537912128445620253[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2537912128445620253[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2537912128445620253[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2537912128445620253[5] = -sin(in_vec[1]);
   out_2537912128445620253[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2537912128445620253[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2537912128445620253[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2537912128445620253[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2537912128445620253[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2537912128445620253[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2537912128445620253[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2537912128445620253[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2537912128445620253[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2537912128445620253[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2537912128445620253[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2537912128445620253[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1659985015181901835) {
   out_1659985015181901835[0] = delta_x[0] + nom_x[0];
   out_1659985015181901835[1] = delta_x[1] + nom_x[1];
   out_1659985015181901835[2] = delta_x[2] + nom_x[2];
   out_1659985015181901835[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1659985015181901835[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1659985015181901835[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1659985015181901835[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1659985015181901835[7] = delta_x[6] + nom_x[7];
   out_1659985015181901835[8] = delta_x[7] + nom_x[8];
   out_1659985015181901835[9] = delta_x[8] + nom_x[9];
   out_1659985015181901835[10] = delta_x[9] + nom_x[10];
   out_1659985015181901835[11] = delta_x[10] + nom_x[11];
   out_1659985015181901835[12] = delta_x[11] + nom_x[12];
   out_1659985015181901835[13] = delta_x[12] + nom_x[13];
   out_1659985015181901835[14] = delta_x[13] + nom_x[14];
   out_1659985015181901835[15] = delta_x[14] + nom_x[15];
   out_1659985015181901835[16] = delta_x[15] + nom_x[16];
   out_1659985015181901835[17] = delta_x[16] + nom_x[17];
   out_1659985015181901835[18] = delta_x[17] + nom_x[18];
   out_1659985015181901835[19] = delta_x[18] + nom_x[19];
   out_1659985015181901835[20] = delta_x[19] + nom_x[20];
   out_1659985015181901835[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8271410697931862202) {
   out_8271410697931862202[0] = -nom_x[0] + true_x[0];
   out_8271410697931862202[1] = -nom_x[1] + true_x[1];
   out_8271410697931862202[2] = -nom_x[2] + true_x[2];
   out_8271410697931862202[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8271410697931862202[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8271410697931862202[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8271410697931862202[6] = -nom_x[7] + true_x[7];
   out_8271410697931862202[7] = -nom_x[8] + true_x[8];
   out_8271410697931862202[8] = -nom_x[9] + true_x[9];
   out_8271410697931862202[9] = -nom_x[10] + true_x[10];
   out_8271410697931862202[10] = -nom_x[11] + true_x[11];
   out_8271410697931862202[11] = -nom_x[12] + true_x[12];
   out_8271410697931862202[12] = -nom_x[13] + true_x[13];
   out_8271410697931862202[13] = -nom_x[14] + true_x[14];
   out_8271410697931862202[14] = -nom_x[15] + true_x[15];
   out_8271410697931862202[15] = -nom_x[16] + true_x[16];
   out_8271410697931862202[16] = -nom_x[17] + true_x[17];
   out_8271410697931862202[17] = -nom_x[18] + true_x[18];
   out_8271410697931862202[18] = -nom_x[19] + true_x[19];
   out_8271410697931862202[19] = -nom_x[20] + true_x[20];
   out_8271410697931862202[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5531808134556081331) {
   out_5531808134556081331[0] = 1.0;
   out_5531808134556081331[1] = 0;
   out_5531808134556081331[2] = 0;
   out_5531808134556081331[3] = 0;
   out_5531808134556081331[4] = 0;
   out_5531808134556081331[5] = 0;
   out_5531808134556081331[6] = 0;
   out_5531808134556081331[7] = 0;
   out_5531808134556081331[8] = 0;
   out_5531808134556081331[9] = 0;
   out_5531808134556081331[10] = 0;
   out_5531808134556081331[11] = 0;
   out_5531808134556081331[12] = 0;
   out_5531808134556081331[13] = 0;
   out_5531808134556081331[14] = 0;
   out_5531808134556081331[15] = 0;
   out_5531808134556081331[16] = 0;
   out_5531808134556081331[17] = 0;
   out_5531808134556081331[18] = 0;
   out_5531808134556081331[19] = 0;
   out_5531808134556081331[20] = 0;
   out_5531808134556081331[21] = 0;
   out_5531808134556081331[22] = 1.0;
   out_5531808134556081331[23] = 0;
   out_5531808134556081331[24] = 0;
   out_5531808134556081331[25] = 0;
   out_5531808134556081331[26] = 0;
   out_5531808134556081331[27] = 0;
   out_5531808134556081331[28] = 0;
   out_5531808134556081331[29] = 0;
   out_5531808134556081331[30] = 0;
   out_5531808134556081331[31] = 0;
   out_5531808134556081331[32] = 0;
   out_5531808134556081331[33] = 0;
   out_5531808134556081331[34] = 0;
   out_5531808134556081331[35] = 0;
   out_5531808134556081331[36] = 0;
   out_5531808134556081331[37] = 0;
   out_5531808134556081331[38] = 0;
   out_5531808134556081331[39] = 0;
   out_5531808134556081331[40] = 0;
   out_5531808134556081331[41] = 0;
   out_5531808134556081331[42] = 0;
   out_5531808134556081331[43] = 0;
   out_5531808134556081331[44] = 1.0;
   out_5531808134556081331[45] = 0;
   out_5531808134556081331[46] = 0;
   out_5531808134556081331[47] = 0;
   out_5531808134556081331[48] = 0;
   out_5531808134556081331[49] = 0;
   out_5531808134556081331[50] = 0;
   out_5531808134556081331[51] = 0;
   out_5531808134556081331[52] = 0;
   out_5531808134556081331[53] = 0;
   out_5531808134556081331[54] = 0;
   out_5531808134556081331[55] = 0;
   out_5531808134556081331[56] = 0;
   out_5531808134556081331[57] = 0;
   out_5531808134556081331[58] = 0;
   out_5531808134556081331[59] = 0;
   out_5531808134556081331[60] = 0;
   out_5531808134556081331[61] = 0;
   out_5531808134556081331[62] = 0;
   out_5531808134556081331[63] = 0;
   out_5531808134556081331[64] = 0;
   out_5531808134556081331[65] = 0;
   out_5531808134556081331[66] = -0.5*state[4];
   out_5531808134556081331[67] = -0.5*state[5];
   out_5531808134556081331[68] = -0.5*state[6];
   out_5531808134556081331[69] = 0;
   out_5531808134556081331[70] = 0;
   out_5531808134556081331[71] = 0;
   out_5531808134556081331[72] = 0;
   out_5531808134556081331[73] = 0;
   out_5531808134556081331[74] = 0;
   out_5531808134556081331[75] = 0;
   out_5531808134556081331[76] = 0;
   out_5531808134556081331[77] = 0;
   out_5531808134556081331[78] = 0;
   out_5531808134556081331[79] = 0;
   out_5531808134556081331[80] = 0;
   out_5531808134556081331[81] = 0;
   out_5531808134556081331[82] = 0;
   out_5531808134556081331[83] = 0;
   out_5531808134556081331[84] = 0;
   out_5531808134556081331[85] = 0;
   out_5531808134556081331[86] = 0;
   out_5531808134556081331[87] = 0.5*state[3];
   out_5531808134556081331[88] = 0.5*state[6];
   out_5531808134556081331[89] = -0.5*state[5];
   out_5531808134556081331[90] = 0;
   out_5531808134556081331[91] = 0;
   out_5531808134556081331[92] = 0;
   out_5531808134556081331[93] = 0;
   out_5531808134556081331[94] = 0;
   out_5531808134556081331[95] = 0;
   out_5531808134556081331[96] = 0;
   out_5531808134556081331[97] = 0;
   out_5531808134556081331[98] = 0;
   out_5531808134556081331[99] = 0;
   out_5531808134556081331[100] = 0;
   out_5531808134556081331[101] = 0;
   out_5531808134556081331[102] = 0;
   out_5531808134556081331[103] = 0;
   out_5531808134556081331[104] = 0;
   out_5531808134556081331[105] = 0;
   out_5531808134556081331[106] = 0;
   out_5531808134556081331[107] = 0;
   out_5531808134556081331[108] = -0.5*state[6];
   out_5531808134556081331[109] = 0.5*state[3];
   out_5531808134556081331[110] = 0.5*state[4];
   out_5531808134556081331[111] = 0;
   out_5531808134556081331[112] = 0;
   out_5531808134556081331[113] = 0;
   out_5531808134556081331[114] = 0;
   out_5531808134556081331[115] = 0;
   out_5531808134556081331[116] = 0;
   out_5531808134556081331[117] = 0;
   out_5531808134556081331[118] = 0;
   out_5531808134556081331[119] = 0;
   out_5531808134556081331[120] = 0;
   out_5531808134556081331[121] = 0;
   out_5531808134556081331[122] = 0;
   out_5531808134556081331[123] = 0;
   out_5531808134556081331[124] = 0;
   out_5531808134556081331[125] = 0;
   out_5531808134556081331[126] = 0;
   out_5531808134556081331[127] = 0;
   out_5531808134556081331[128] = 0;
   out_5531808134556081331[129] = 0.5*state[5];
   out_5531808134556081331[130] = -0.5*state[4];
   out_5531808134556081331[131] = 0.5*state[3];
   out_5531808134556081331[132] = 0;
   out_5531808134556081331[133] = 0;
   out_5531808134556081331[134] = 0;
   out_5531808134556081331[135] = 0;
   out_5531808134556081331[136] = 0;
   out_5531808134556081331[137] = 0;
   out_5531808134556081331[138] = 0;
   out_5531808134556081331[139] = 0;
   out_5531808134556081331[140] = 0;
   out_5531808134556081331[141] = 0;
   out_5531808134556081331[142] = 0;
   out_5531808134556081331[143] = 0;
   out_5531808134556081331[144] = 0;
   out_5531808134556081331[145] = 0;
   out_5531808134556081331[146] = 0;
   out_5531808134556081331[147] = 0;
   out_5531808134556081331[148] = 0;
   out_5531808134556081331[149] = 0;
   out_5531808134556081331[150] = 0;
   out_5531808134556081331[151] = 0;
   out_5531808134556081331[152] = 0;
   out_5531808134556081331[153] = 1.0;
   out_5531808134556081331[154] = 0;
   out_5531808134556081331[155] = 0;
   out_5531808134556081331[156] = 0;
   out_5531808134556081331[157] = 0;
   out_5531808134556081331[158] = 0;
   out_5531808134556081331[159] = 0;
   out_5531808134556081331[160] = 0;
   out_5531808134556081331[161] = 0;
   out_5531808134556081331[162] = 0;
   out_5531808134556081331[163] = 0;
   out_5531808134556081331[164] = 0;
   out_5531808134556081331[165] = 0;
   out_5531808134556081331[166] = 0;
   out_5531808134556081331[167] = 0;
   out_5531808134556081331[168] = 0;
   out_5531808134556081331[169] = 0;
   out_5531808134556081331[170] = 0;
   out_5531808134556081331[171] = 0;
   out_5531808134556081331[172] = 0;
   out_5531808134556081331[173] = 0;
   out_5531808134556081331[174] = 0;
   out_5531808134556081331[175] = 1.0;
   out_5531808134556081331[176] = 0;
   out_5531808134556081331[177] = 0;
   out_5531808134556081331[178] = 0;
   out_5531808134556081331[179] = 0;
   out_5531808134556081331[180] = 0;
   out_5531808134556081331[181] = 0;
   out_5531808134556081331[182] = 0;
   out_5531808134556081331[183] = 0;
   out_5531808134556081331[184] = 0;
   out_5531808134556081331[185] = 0;
   out_5531808134556081331[186] = 0;
   out_5531808134556081331[187] = 0;
   out_5531808134556081331[188] = 0;
   out_5531808134556081331[189] = 0;
   out_5531808134556081331[190] = 0;
   out_5531808134556081331[191] = 0;
   out_5531808134556081331[192] = 0;
   out_5531808134556081331[193] = 0;
   out_5531808134556081331[194] = 0;
   out_5531808134556081331[195] = 0;
   out_5531808134556081331[196] = 0;
   out_5531808134556081331[197] = 1.0;
   out_5531808134556081331[198] = 0;
   out_5531808134556081331[199] = 0;
   out_5531808134556081331[200] = 0;
   out_5531808134556081331[201] = 0;
   out_5531808134556081331[202] = 0;
   out_5531808134556081331[203] = 0;
   out_5531808134556081331[204] = 0;
   out_5531808134556081331[205] = 0;
   out_5531808134556081331[206] = 0;
   out_5531808134556081331[207] = 0;
   out_5531808134556081331[208] = 0;
   out_5531808134556081331[209] = 0;
   out_5531808134556081331[210] = 0;
   out_5531808134556081331[211] = 0;
   out_5531808134556081331[212] = 0;
   out_5531808134556081331[213] = 0;
   out_5531808134556081331[214] = 0;
   out_5531808134556081331[215] = 0;
   out_5531808134556081331[216] = 0;
   out_5531808134556081331[217] = 0;
   out_5531808134556081331[218] = 0;
   out_5531808134556081331[219] = 1.0;
   out_5531808134556081331[220] = 0;
   out_5531808134556081331[221] = 0;
   out_5531808134556081331[222] = 0;
   out_5531808134556081331[223] = 0;
   out_5531808134556081331[224] = 0;
   out_5531808134556081331[225] = 0;
   out_5531808134556081331[226] = 0;
   out_5531808134556081331[227] = 0;
   out_5531808134556081331[228] = 0;
   out_5531808134556081331[229] = 0;
   out_5531808134556081331[230] = 0;
   out_5531808134556081331[231] = 0;
   out_5531808134556081331[232] = 0;
   out_5531808134556081331[233] = 0;
   out_5531808134556081331[234] = 0;
   out_5531808134556081331[235] = 0;
   out_5531808134556081331[236] = 0;
   out_5531808134556081331[237] = 0;
   out_5531808134556081331[238] = 0;
   out_5531808134556081331[239] = 0;
   out_5531808134556081331[240] = 0;
   out_5531808134556081331[241] = 1.0;
   out_5531808134556081331[242] = 0;
   out_5531808134556081331[243] = 0;
   out_5531808134556081331[244] = 0;
   out_5531808134556081331[245] = 0;
   out_5531808134556081331[246] = 0;
   out_5531808134556081331[247] = 0;
   out_5531808134556081331[248] = 0;
   out_5531808134556081331[249] = 0;
   out_5531808134556081331[250] = 0;
   out_5531808134556081331[251] = 0;
   out_5531808134556081331[252] = 0;
   out_5531808134556081331[253] = 0;
   out_5531808134556081331[254] = 0;
   out_5531808134556081331[255] = 0;
   out_5531808134556081331[256] = 0;
   out_5531808134556081331[257] = 0;
   out_5531808134556081331[258] = 0;
   out_5531808134556081331[259] = 0;
   out_5531808134556081331[260] = 0;
   out_5531808134556081331[261] = 0;
   out_5531808134556081331[262] = 0;
   out_5531808134556081331[263] = 1.0;
   out_5531808134556081331[264] = 0;
   out_5531808134556081331[265] = 0;
   out_5531808134556081331[266] = 0;
   out_5531808134556081331[267] = 0;
   out_5531808134556081331[268] = 0;
   out_5531808134556081331[269] = 0;
   out_5531808134556081331[270] = 0;
   out_5531808134556081331[271] = 0;
   out_5531808134556081331[272] = 0;
   out_5531808134556081331[273] = 0;
   out_5531808134556081331[274] = 0;
   out_5531808134556081331[275] = 0;
   out_5531808134556081331[276] = 0;
   out_5531808134556081331[277] = 0;
   out_5531808134556081331[278] = 0;
   out_5531808134556081331[279] = 0;
   out_5531808134556081331[280] = 0;
   out_5531808134556081331[281] = 0;
   out_5531808134556081331[282] = 0;
   out_5531808134556081331[283] = 0;
   out_5531808134556081331[284] = 0;
   out_5531808134556081331[285] = 1.0;
   out_5531808134556081331[286] = 0;
   out_5531808134556081331[287] = 0;
   out_5531808134556081331[288] = 0;
   out_5531808134556081331[289] = 0;
   out_5531808134556081331[290] = 0;
   out_5531808134556081331[291] = 0;
   out_5531808134556081331[292] = 0;
   out_5531808134556081331[293] = 0;
   out_5531808134556081331[294] = 0;
   out_5531808134556081331[295] = 0;
   out_5531808134556081331[296] = 0;
   out_5531808134556081331[297] = 0;
   out_5531808134556081331[298] = 0;
   out_5531808134556081331[299] = 0;
   out_5531808134556081331[300] = 0;
   out_5531808134556081331[301] = 0;
   out_5531808134556081331[302] = 0;
   out_5531808134556081331[303] = 0;
   out_5531808134556081331[304] = 0;
   out_5531808134556081331[305] = 0;
   out_5531808134556081331[306] = 0;
   out_5531808134556081331[307] = 1.0;
   out_5531808134556081331[308] = 0;
   out_5531808134556081331[309] = 0;
   out_5531808134556081331[310] = 0;
   out_5531808134556081331[311] = 0;
   out_5531808134556081331[312] = 0;
   out_5531808134556081331[313] = 0;
   out_5531808134556081331[314] = 0;
   out_5531808134556081331[315] = 0;
   out_5531808134556081331[316] = 0;
   out_5531808134556081331[317] = 0;
   out_5531808134556081331[318] = 0;
   out_5531808134556081331[319] = 0;
   out_5531808134556081331[320] = 0;
   out_5531808134556081331[321] = 0;
   out_5531808134556081331[322] = 0;
   out_5531808134556081331[323] = 0;
   out_5531808134556081331[324] = 0;
   out_5531808134556081331[325] = 0;
   out_5531808134556081331[326] = 0;
   out_5531808134556081331[327] = 0;
   out_5531808134556081331[328] = 0;
   out_5531808134556081331[329] = 1.0;
   out_5531808134556081331[330] = 0;
   out_5531808134556081331[331] = 0;
   out_5531808134556081331[332] = 0;
   out_5531808134556081331[333] = 0;
   out_5531808134556081331[334] = 0;
   out_5531808134556081331[335] = 0;
   out_5531808134556081331[336] = 0;
   out_5531808134556081331[337] = 0;
   out_5531808134556081331[338] = 0;
   out_5531808134556081331[339] = 0;
   out_5531808134556081331[340] = 0;
   out_5531808134556081331[341] = 0;
   out_5531808134556081331[342] = 0;
   out_5531808134556081331[343] = 0;
   out_5531808134556081331[344] = 0;
   out_5531808134556081331[345] = 0;
   out_5531808134556081331[346] = 0;
   out_5531808134556081331[347] = 0;
   out_5531808134556081331[348] = 0;
   out_5531808134556081331[349] = 0;
   out_5531808134556081331[350] = 0;
   out_5531808134556081331[351] = 1.0;
   out_5531808134556081331[352] = 0;
   out_5531808134556081331[353] = 0;
   out_5531808134556081331[354] = 0;
   out_5531808134556081331[355] = 0;
   out_5531808134556081331[356] = 0;
   out_5531808134556081331[357] = 0;
   out_5531808134556081331[358] = 0;
   out_5531808134556081331[359] = 0;
   out_5531808134556081331[360] = 0;
   out_5531808134556081331[361] = 0;
   out_5531808134556081331[362] = 0;
   out_5531808134556081331[363] = 0;
   out_5531808134556081331[364] = 0;
   out_5531808134556081331[365] = 0;
   out_5531808134556081331[366] = 0;
   out_5531808134556081331[367] = 0;
   out_5531808134556081331[368] = 0;
   out_5531808134556081331[369] = 0;
   out_5531808134556081331[370] = 0;
   out_5531808134556081331[371] = 0;
   out_5531808134556081331[372] = 0;
   out_5531808134556081331[373] = 1.0;
   out_5531808134556081331[374] = 0;
   out_5531808134556081331[375] = 0;
   out_5531808134556081331[376] = 0;
   out_5531808134556081331[377] = 0;
   out_5531808134556081331[378] = 0;
   out_5531808134556081331[379] = 0;
   out_5531808134556081331[380] = 0;
   out_5531808134556081331[381] = 0;
   out_5531808134556081331[382] = 0;
   out_5531808134556081331[383] = 0;
   out_5531808134556081331[384] = 0;
   out_5531808134556081331[385] = 0;
   out_5531808134556081331[386] = 0;
   out_5531808134556081331[387] = 0;
   out_5531808134556081331[388] = 0;
   out_5531808134556081331[389] = 0;
   out_5531808134556081331[390] = 0;
   out_5531808134556081331[391] = 0;
   out_5531808134556081331[392] = 0;
   out_5531808134556081331[393] = 0;
   out_5531808134556081331[394] = 0;
   out_5531808134556081331[395] = 1.0;
   out_5531808134556081331[396] = 0;
   out_5531808134556081331[397] = 0;
   out_5531808134556081331[398] = 0;
   out_5531808134556081331[399] = 0;
   out_5531808134556081331[400] = 0;
   out_5531808134556081331[401] = 0;
   out_5531808134556081331[402] = 0;
   out_5531808134556081331[403] = 0;
   out_5531808134556081331[404] = 0;
   out_5531808134556081331[405] = 0;
   out_5531808134556081331[406] = 0;
   out_5531808134556081331[407] = 0;
   out_5531808134556081331[408] = 0;
   out_5531808134556081331[409] = 0;
   out_5531808134556081331[410] = 0;
   out_5531808134556081331[411] = 0;
   out_5531808134556081331[412] = 0;
   out_5531808134556081331[413] = 0;
   out_5531808134556081331[414] = 0;
   out_5531808134556081331[415] = 0;
   out_5531808134556081331[416] = 0;
   out_5531808134556081331[417] = 1.0;
   out_5531808134556081331[418] = 0;
   out_5531808134556081331[419] = 0;
   out_5531808134556081331[420] = 0;
   out_5531808134556081331[421] = 0;
   out_5531808134556081331[422] = 0;
   out_5531808134556081331[423] = 0;
   out_5531808134556081331[424] = 0;
   out_5531808134556081331[425] = 0;
   out_5531808134556081331[426] = 0;
   out_5531808134556081331[427] = 0;
   out_5531808134556081331[428] = 0;
   out_5531808134556081331[429] = 0;
   out_5531808134556081331[430] = 0;
   out_5531808134556081331[431] = 0;
   out_5531808134556081331[432] = 0;
   out_5531808134556081331[433] = 0;
   out_5531808134556081331[434] = 0;
   out_5531808134556081331[435] = 0;
   out_5531808134556081331[436] = 0;
   out_5531808134556081331[437] = 0;
   out_5531808134556081331[438] = 0;
   out_5531808134556081331[439] = 1.0;
   out_5531808134556081331[440] = 0;
   out_5531808134556081331[441] = 0;
   out_5531808134556081331[442] = 0;
   out_5531808134556081331[443] = 0;
   out_5531808134556081331[444] = 0;
   out_5531808134556081331[445] = 0;
   out_5531808134556081331[446] = 0;
   out_5531808134556081331[447] = 0;
   out_5531808134556081331[448] = 0;
   out_5531808134556081331[449] = 0;
   out_5531808134556081331[450] = 0;
   out_5531808134556081331[451] = 0;
   out_5531808134556081331[452] = 0;
   out_5531808134556081331[453] = 0;
   out_5531808134556081331[454] = 0;
   out_5531808134556081331[455] = 0;
   out_5531808134556081331[456] = 0;
   out_5531808134556081331[457] = 0;
   out_5531808134556081331[458] = 0;
   out_5531808134556081331[459] = 0;
   out_5531808134556081331[460] = 0;
   out_5531808134556081331[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_313123907282535158) {
   out_313123907282535158[0] = dt*state[7] + state[0];
   out_313123907282535158[1] = dt*state[8] + state[1];
   out_313123907282535158[2] = dt*state[9] + state[2];
   out_313123907282535158[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_313123907282535158[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_313123907282535158[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_313123907282535158[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_313123907282535158[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_313123907282535158[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_313123907282535158[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_313123907282535158[10] = state[10];
   out_313123907282535158[11] = state[11];
   out_313123907282535158[12] = state[12];
   out_313123907282535158[13] = state[13];
   out_313123907282535158[14] = state[14];
   out_313123907282535158[15] = state[15];
   out_313123907282535158[16] = state[16];
   out_313123907282535158[17] = state[17];
   out_313123907282535158[18] = state[18];
   out_313123907282535158[19] = state[19];
   out_313123907282535158[20] = state[20];
   out_313123907282535158[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7439547743424380131) {
   out_7439547743424380131[0] = 1;
   out_7439547743424380131[1] = 0;
   out_7439547743424380131[2] = 0;
   out_7439547743424380131[3] = 0;
   out_7439547743424380131[4] = 0;
   out_7439547743424380131[5] = 0;
   out_7439547743424380131[6] = dt;
   out_7439547743424380131[7] = 0;
   out_7439547743424380131[8] = 0;
   out_7439547743424380131[9] = 0;
   out_7439547743424380131[10] = 0;
   out_7439547743424380131[11] = 0;
   out_7439547743424380131[12] = 0;
   out_7439547743424380131[13] = 0;
   out_7439547743424380131[14] = 0;
   out_7439547743424380131[15] = 0;
   out_7439547743424380131[16] = 0;
   out_7439547743424380131[17] = 0;
   out_7439547743424380131[18] = 0;
   out_7439547743424380131[19] = 0;
   out_7439547743424380131[20] = 0;
   out_7439547743424380131[21] = 0;
   out_7439547743424380131[22] = 1;
   out_7439547743424380131[23] = 0;
   out_7439547743424380131[24] = 0;
   out_7439547743424380131[25] = 0;
   out_7439547743424380131[26] = 0;
   out_7439547743424380131[27] = 0;
   out_7439547743424380131[28] = dt;
   out_7439547743424380131[29] = 0;
   out_7439547743424380131[30] = 0;
   out_7439547743424380131[31] = 0;
   out_7439547743424380131[32] = 0;
   out_7439547743424380131[33] = 0;
   out_7439547743424380131[34] = 0;
   out_7439547743424380131[35] = 0;
   out_7439547743424380131[36] = 0;
   out_7439547743424380131[37] = 0;
   out_7439547743424380131[38] = 0;
   out_7439547743424380131[39] = 0;
   out_7439547743424380131[40] = 0;
   out_7439547743424380131[41] = 0;
   out_7439547743424380131[42] = 0;
   out_7439547743424380131[43] = 0;
   out_7439547743424380131[44] = 1;
   out_7439547743424380131[45] = 0;
   out_7439547743424380131[46] = 0;
   out_7439547743424380131[47] = 0;
   out_7439547743424380131[48] = 0;
   out_7439547743424380131[49] = 0;
   out_7439547743424380131[50] = dt;
   out_7439547743424380131[51] = 0;
   out_7439547743424380131[52] = 0;
   out_7439547743424380131[53] = 0;
   out_7439547743424380131[54] = 0;
   out_7439547743424380131[55] = 0;
   out_7439547743424380131[56] = 0;
   out_7439547743424380131[57] = 0;
   out_7439547743424380131[58] = 0;
   out_7439547743424380131[59] = 0;
   out_7439547743424380131[60] = 0;
   out_7439547743424380131[61] = 0;
   out_7439547743424380131[62] = 0;
   out_7439547743424380131[63] = 0;
   out_7439547743424380131[64] = 0;
   out_7439547743424380131[65] = 0;
   out_7439547743424380131[66] = 1;
   out_7439547743424380131[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7439547743424380131[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7439547743424380131[69] = 0;
   out_7439547743424380131[70] = 0;
   out_7439547743424380131[71] = 0;
   out_7439547743424380131[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7439547743424380131[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7439547743424380131[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7439547743424380131[75] = 0;
   out_7439547743424380131[76] = 0;
   out_7439547743424380131[77] = 0;
   out_7439547743424380131[78] = 0;
   out_7439547743424380131[79] = 0;
   out_7439547743424380131[80] = 0;
   out_7439547743424380131[81] = 0;
   out_7439547743424380131[82] = 0;
   out_7439547743424380131[83] = 0;
   out_7439547743424380131[84] = 0;
   out_7439547743424380131[85] = 0;
   out_7439547743424380131[86] = 0;
   out_7439547743424380131[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7439547743424380131[88] = 1;
   out_7439547743424380131[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7439547743424380131[90] = 0;
   out_7439547743424380131[91] = 0;
   out_7439547743424380131[92] = 0;
   out_7439547743424380131[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7439547743424380131[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7439547743424380131[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7439547743424380131[96] = 0;
   out_7439547743424380131[97] = 0;
   out_7439547743424380131[98] = 0;
   out_7439547743424380131[99] = 0;
   out_7439547743424380131[100] = 0;
   out_7439547743424380131[101] = 0;
   out_7439547743424380131[102] = 0;
   out_7439547743424380131[103] = 0;
   out_7439547743424380131[104] = 0;
   out_7439547743424380131[105] = 0;
   out_7439547743424380131[106] = 0;
   out_7439547743424380131[107] = 0;
   out_7439547743424380131[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7439547743424380131[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7439547743424380131[110] = 1;
   out_7439547743424380131[111] = 0;
   out_7439547743424380131[112] = 0;
   out_7439547743424380131[113] = 0;
   out_7439547743424380131[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7439547743424380131[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7439547743424380131[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7439547743424380131[117] = 0;
   out_7439547743424380131[118] = 0;
   out_7439547743424380131[119] = 0;
   out_7439547743424380131[120] = 0;
   out_7439547743424380131[121] = 0;
   out_7439547743424380131[122] = 0;
   out_7439547743424380131[123] = 0;
   out_7439547743424380131[124] = 0;
   out_7439547743424380131[125] = 0;
   out_7439547743424380131[126] = 0;
   out_7439547743424380131[127] = 0;
   out_7439547743424380131[128] = 0;
   out_7439547743424380131[129] = 0;
   out_7439547743424380131[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7439547743424380131[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7439547743424380131[132] = 1;
   out_7439547743424380131[133] = 0;
   out_7439547743424380131[134] = 0;
   out_7439547743424380131[135] = 0;
   out_7439547743424380131[136] = 0;
   out_7439547743424380131[137] = 0;
   out_7439547743424380131[138] = 0;
   out_7439547743424380131[139] = 0;
   out_7439547743424380131[140] = 0;
   out_7439547743424380131[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7439547743424380131[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7439547743424380131[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7439547743424380131[144] = 0;
   out_7439547743424380131[145] = 0;
   out_7439547743424380131[146] = 0;
   out_7439547743424380131[147] = 0;
   out_7439547743424380131[148] = 0;
   out_7439547743424380131[149] = 0;
   out_7439547743424380131[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7439547743424380131[151] = 0;
   out_7439547743424380131[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7439547743424380131[153] = 0;
   out_7439547743424380131[154] = 1;
   out_7439547743424380131[155] = 0;
   out_7439547743424380131[156] = 0;
   out_7439547743424380131[157] = 0;
   out_7439547743424380131[158] = 0;
   out_7439547743424380131[159] = 0;
   out_7439547743424380131[160] = 0;
   out_7439547743424380131[161] = 0;
   out_7439547743424380131[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7439547743424380131[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7439547743424380131[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7439547743424380131[165] = 0;
   out_7439547743424380131[166] = 0;
   out_7439547743424380131[167] = 0;
   out_7439547743424380131[168] = 0;
   out_7439547743424380131[169] = 0;
   out_7439547743424380131[170] = 0;
   out_7439547743424380131[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7439547743424380131[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7439547743424380131[173] = 0;
   out_7439547743424380131[174] = 0;
   out_7439547743424380131[175] = 0;
   out_7439547743424380131[176] = 1;
   out_7439547743424380131[177] = 0;
   out_7439547743424380131[178] = 0;
   out_7439547743424380131[179] = 0;
   out_7439547743424380131[180] = 0;
   out_7439547743424380131[181] = 0;
   out_7439547743424380131[182] = 0;
   out_7439547743424380131[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7439547743424380131[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7439547743424380131[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7439547743424380131[186] = 0;
   out_7439547743424380131[187] = 0;
   out_7439547743424380131[188] = 0;
   out_7439547743424380131[189] = 0;
   out_7439547743424380131[190] = 0;
   out_7439547743424380131[191] = 0;
   out_7439547743424380131[192] = 0;
   out_7439547743424380131[193] = 0;
   out_7439547743424380131[194] = 0;
   out_7439547743424380131[195] = 0;
   out_7439547743424380131[196] = 0;
   out_7439547743424380131[197] = 0;
   out_7439547743424380131[198] = 1;
   out_7439547743424380131[199] = 0;
   out_7439547743424380131[200] = 0;
   out_7439547743424380131[201] = 0;
   out_7439547743424380131[202] = 0;
   out_7439547743424380131[203] = 0;
   out_7439547743424380131[204] = 0;
   out_7439547743424380131[205] = 0;
   out_7439547743424380131[206] = 0;
   out_7439547743424380131[207] = 0;
   out_7439547743424380131[208] = 0;
   out_7439547743424380131[209] = 0;
   out_7439547743424380131[210] = 0;
   out_7439547743424380131[211] = 0;
   out_7439547743424380131[212] = 0;
   out_7439547743424380131[213] = 0;
   out_7439547743424380131[214] = 0;
   out_7439547743424380131[215] = 0;
   out_7439547743424380131[216] = 0;
   out_7439547743424380131[217] = 0;
   out_7439547743424380131[218] = 0;
   out_7439547743424380131[219] = 0;
   out_7439547743424380131[220] = 1;
   out_7439547743424380131[221] = 0;
   out_7439547743424380131[222] = 0;
   out_7439547743424380131[223] = 0;
   out_7439547743424380131[224] = 0;
   out_7439547743424380131[225] = 0;
   out_7439547743424380131[226] = 0;
   out_7439547743424380131[227] = 0;
   out_7439547743424380131[228] = 0;
   out_7439547743424380131[229] = 0;
   out_7439547743424380131[230] = 0;
   out_7439547743424380131[231] = 0;
   out_7439547743424380131[232] = 0;
   out_7439547743424380131[233] = 0;
   out_7439547743424380131[234] = 0;
   out_7439547743424380131[235] = 0;
   out_7439547743424380131[236] = 0;
   out_7439547743424380131[237] = 0;
   out_7439547743424380131[238] = 0;
   out_7439547743424380131[239] = 0;
   out_7439547743424380131[240] = 0;
   out_7439547743424380131[241] = 0;
   out_7439547743424380131[242] = 1;
   out_7439547743424380131[243] = 0;
   out_7439547743424380131[244] = 0;
   out_7439547743424380131[245] = 0;
   out_7439547743424380131[246] = 0;
   out_7439547743424380131[247] = 0;
   out_7439547743424380131[248] = 0;
   out_7439547743424380131[249] = 0;
   out_7439547743424380131[250] = 0;
   out_7439547743424380131[251] = 0;
   out_7439547743424380131[252] = 0;
   out_7439547743424380131[253] = 0;
   out_7439547743424380131[254] = 0;
   out_7439547743424380131[255] = 0;
   out_7439547743424380131[256] = 0;
   out_7439547743424380131[257] = 0;
   out_7439547743424380131[258] = 0;
   out_7439547743424380131[259] = 0;
   out_7439547743424380131[260] = 0;
   out_7439547743424380131[261] = 0;
   out_7439547743424380131[262] = 0;
   out_7439547743424380131[263] = 0;
   out_7439547743424380131[264] = 1;
   out_7439547743424380131[265] = 0;
   out_7439547743424380131[266] = 0;
   out_7439547743424380131[267] = 0;
   out_7439547743424380131[268] = 0;
   out_7439547743424380131[269] = 0;
   out_7439547743424380131[270] = 0;
   out_7439547743424380131[271] = 0;
   out_7439547743424380131[272] = 0;
   out_7439547743424380131[273] = 0;
   out_7439547743424380131[274] = 0;
   out_7439547743424380131[275] = 0;
   out_7439547743424380131[276] = 0;
   out_7439547743424380131[277] = 0;
   out_7439547743424380131[278] = 0;
   out_7439547743424380131[279] = 0;
   out_7439547743424380131[280] = 0;
   out_7439547743424380131[281] = 0;
   out_7439547743424380131[282] = 0;
   out_7439547743424380131[283] = 0;
   out_7439547743424380131[284] = 0;
   out_7439547743424380131[285] = 0;
   out_7439547743424380131[286] = 1;
   out_7439547743424380131[287] = 0;
   out_7439547743424380131[288] = 0;
   out_7439547743424380131[289] = 0;
   out_7439547743424380131[290] = 0;
   out_7439547743424380131[291] = 0;
   out_7439547743424380131[292] = 0;
   out_7439547743424380131[293] = 0;
   out_7439547743424380131[294] = 0;
   out_7439547743424380131[295] = 0;
   out_7439547743424380131[296] = 0;
   out_7439547743424380131[297] = 0;
   out_7439547743424380131[298] = 0;
   out_7439547743424380131[299] = 0;
   out_7439547743424380131[300] = 0;
   out_7439547743424380131[301] = 0;
   out_7439547743424380131[302] = 0;
   out_7439547743424380131[303] = 0;
   out_7439547743424380131[304] = 0;
   out_7439547743424380131[305] = 0;
   out_7439547743424380131[306] = 0;
   out_7439547743424380131[307] = 0;
   out_7439547743424380131[308] = 1;
   out_7439547743424380131[309] = 0;
   out_7439547743424380131[310] = 0;
   out_7439547743424380131[311] = 0;
   out_7439547743424380131[312] = 0;
   out_7439547743424380131[313] = 0;
   out_7439547743424380131[314] = 0;
   out_7439547743424380131[315] = 0;
   out_7439547743424380131[316] = 0;
   out_7439547743424380131[317] = 0;
   out_7439547743424380131[318] = 0;
   out_7439547743424380131[319] = 0;
   out_7439547743424380131[320] = 0;
   out_7439547743424380131[321] = 0;
   out_7439547743424380131[322] = 0;
   out_7439547743424380131[323] = 0;
   out_7439547743424380131[324] = 0;
   out_7439547743424380131[325] = 0;
   out_7439547743424380131[326] = 0;
   out_7439547743424380131[327] = 0;
   out_7439547743424380131[328] = 0;
   out_7439547743424380131[329] = 0;
   out_7439547743424380131[330] = 1;
   out_7439547743424380131[331] = 0;
   out_7439547743424380131[332] = 0;
   out_7439547743424380131[333] = 0;
   out_7439547743424380131[334] = 0;
   out_7439547743424380131[335] = 0;
   out_7439547743424380131[336] = 0;
   out_7439547743424380131[337] = 0;
   out_7439547743424380131[338] = 0;
   out_7439547743424380131[339] = 0;
   out_7439547743424380131[340] = 0;
   out_7439547743424380131[341] = 0;
   out_7439547743424380131[342] = 0;
   out_7439547743424380131[343] = 0;
   out_7439547743424380131[344] = 0;
   out_7439547743424380131[345] = 0;
   out_7439547743424380131[346] = 0;
   out_7439547743424380131[347] = 0;
   out_7439547743424380131[348] = 0;
   out_7439547743424380131[349] = 0;
   out_7439547743424380131[350] = 0;
   out_7439547743424380131[351] = 0;
   out_7439547743424380131[352] = 1;
   out_7439547743424380131[353] = 0;
   out_7439547743424380131[354] = 0;
   out_7439547743424380131[355] = 0;
   out_7439547743424380131[356] = 0;
   out_7439547743424380131[357] = 0;
   out_7439547743424380131[358] = 0;
   out_7439547743424380131[359] = 0;
   out_7439547743424380131[360] = 0;
   out_7439547743424380131[361] = 0;
   out_7439547743424380131[362] = 0;
   out_7439547743424380131[363] = 0;
   out_7439547743424380131[364] = 0;
   out_7439547743424380131[365] = 0;
   out_7439547743424380131[366] = 0;
   out_7439547743424380131[367] = 0;
   out_7439547743424380131[368] = 0;
   out_7439547743424380131[369] = 0;
   out_7439547743424380131[370] = 0;
   out_7439547743424380131[371] = 0;
   out_7439547743424380131[372] = 0;
   out_7439547743424380131[373] = 0;
   out_7439547743424380131[374] = 1;
   out_7439547743424380131[375] = 0;
   out_7439547743424380131[376] = 0;
   out_7439547743424380131[377] = 0;
   out_7439547743424380131[378] = 0;
   out_7439547743424380131[379] = 0;
   out_7439547743424380131[380] = 0;
   out_7439547743424380131[381] = 0;
   out_7439547743424380131[382] = 0;
   out_7439547743424380131[383] = 0;
   out_7439547743424380131[384] = 0;
   out_7439547743424380131[385] = 0;
   out_7439547743424380131[386] = 0;
   out_7439547743424380131[387] = 0;
   out_7439547743424380131[388] = 0;
   out_7439547743424380131[389] = 0;
   out_7439547743424380131[390] = 0;
   out_7439547743424380131[391] = 0;
   out_7439547743424380131[392] = 0;
   out_7439547743424380131[393] = 0;
   out_7439547743424380131[394] = 0;
   out_7439547743424380131[395] = 0;
   out_7439547743424380131[396] = 1;
   out_7439547743424380131[397] = 0;
   out_7439547743424380131[398] = 0;
   out_7439547743424380131[399] = 0;
   out_7439547743424380131[400] = 0;
   out_7439547743424380131[401] = 0;
   out_7439547743424380131[402] = 0;
   out_7439547743424380131[403] = 0;
   out_7439547743424380131[404] = 0;
   out_7439547743424380131[405] = 0;
   out_7439547743424380131[406] = 0;
   out_7439547743424380131[407] = 0;
   out_7439547743424380131[408] = 0;
   out_7439547743424380131[409] = 0;
   out_7439547743424380131[410] = 0;
   out_7439547743424380131[411] = 0;
   out_7439547743424380131[412] = 0;
   out_7439547743424380131[413] = 0;
   out_7439547743424380131[414] = 0;
   out_7439547743424380131[415] = 0;
   out_7439547743424380131[416] = 0;
   out_7439547743424380131[417] = 0;
   out_7439547743424380131[418] = 1;
   out_7439547743424380131[419] = 0;
   out_7439547743424380131[420] = 0;
   out_7439547743424380131[421] = 0;
   out_7439547743424380131[422] = 0;
   out_7439547743424380131[423] = 0;
   out_7439547743424380131[424] = 0;
   out_7439547743424380131[425] = 0;
   out_7439547743424380131[426] = 0;
   out_7439547743424380131[427] = 0;
   out_7439547743424380131[428] = 0;
   out_7439547743424380131[429] = 0;
   out_7439547743424380131[430] = 0;
   out_7439547743424380131[431] = 0;
   out_7439547743424380131[432] = 0;
   out_7439547743424380131[433] = 0;
   out_7439547743424380131[434] = 0;
   out_7439547743424380131[435] = 0;
   out_7439547743424380131[436] = 0;
   out_7439547743424380131[437] = 0;
   out_7439547743424380131[438] = 0;
   out_7439547743424380131[439] = 0;
   out_7439547743424380131[440] = 1;
}
void h_4(double *state, double *unused, double *out_5777872899246538591) {
   out_5777872899246538591[0] = state[10] + state[13];
   out_5777872899246538591[1] = state[11] + state[14];
   out_5777872899246538591[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3167217879617347232) {
   out_3167217879617347232[0] = 0;
   out_3167217879617347232[1] = 0;
   out_3167217879617347232[2] = 0;
   out_3167217879617347232[3] = 0;
   out_3167217879617347232[4] = 0;
   out_3167217879617347232[5] = 0;
   out_3167217879617347232[6] = 0;
   out_3167217879617347232[7] = 0;
   out_3167217879617347232[8] = 0;
   out_3167217879617347232[9] = 0;
   out_3167217879617347232[10] = 1;
   out_3167217879617347232[11] = 0;
   out_3167217879617347232[12] = 0;
   out_3167217879617347232[13] = 1;
   out_3167217879617347232[14] = 0;
   out_3167217879617347232[15] = 0;
   out_3167217879617347232[16] = 0;
   out_3167217879617347232[17] = 0;
   out_3167217879617347232[18] = 0;
   out_3167217879617347232[19] = 0;
   out_3167217879617347232[20] = 0;
   out_3167217879617347232[21] = 0;
   out_3167217879617347232[22] = 0;
   out_3167217879617347232[23] = 0;
   out_3167217879617347232[24] = 0;
   out_3167217879617347232[25] = 0;
   out_3167217879617347232[26] = 0;
   out_3167217879617347232[27] = 0;
   out_3167217879617347232[28] = 0;
   out_3167217879617347232[29] = 0;
   out_3167217879617347232[30] = 0;
   out_3167217879617347232[31] = 0;
   out_3167217879617347232[32] = 0;
   out_3167217879617347232[33] = 1;
   out_3167217879617347232[34] = 0;
   out_3167217879617347232[35] = 0;
   out_3167217879617347232[36] = 1;
   out_3167217879617347232[37] = 0;
   out_3167217879617347232[38] = 0;
   out_3167217879617347232[39] = 0;
   out_3167217879617347232[40] = 0;
   out_3167217879617347232[41] = 0;
   out_3167217879617347232[42] = 0;
   out_3167217879617347232[43] = 0;
   out_3167217879617347232[44] = 0;
   out_3167217879617347232[45] = 0;
   out_3167217879617347232[46] = 0;
   out_3167217879617347232[47] = 0;
   out_3167217879617347232[48] = 0;
   out_3167217879617347232[49] = 0;
   out_3167217879617347232[50] = 0;
   out_3167217879617347232[51] = 0;
   out_3167217879617347232[52] = 0;
   out_3167217879617347232[53] = 0;
   out_3167217879617347232[54] = 0;
   out_3167217879617347232[55] = 0;
   out_3167217879617347232[56] = 1;
   out_3167217879617347232[57] = 0;
   out_3167217879617347232[58] = 0;
   out_3167217879617347232[59] = 1;
   out_3167217879617347232[60] = 0;
   out_3167217879617347232[61] = 0;
   out_3167217879617347232[62] = 0;
   out_3167217879617347232[63] = 0;
   out_3167217879617347232[64] = 0;
   out_3167217879617347232[65] = 0;
}
void h_9(double *state, double *unused, double *out_3795054158466794246) {
   out_3795054158466794246[0] = state[10];
   out_3795054158466794246[1] = state[11];
   out_3795054158466794246[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3408407526246937877) {
   out_3408407526246937877[0] = 0;
   out_3408407526246937877[1] = 0;
   out_3408407526246937877[2] = 0;
   out_3408407526246937877[3] = 0;
   out_3408407526246937877[4] = 0;
   out_3408407526246937877[5] = 0;
   out_3408407526246937877[6] = 0;
   out_3408407526246937877[7] = 0;
   out_3408407526246937877[8] = 0;
   out_3408407526246937877[9] = 0;
   out_3408407526246937877[10] = 1;
   out_3408407526246937877[11] = 0;
   out_3408407526246937877[12] = 0;
   out_3408407526246937877[13] = 0;
   out_3408407526246937877[14] = 0;
   out_3408407526246937877[15] = 0;
   out_3408407526246937877[16] = 0;
   out_3408407526246937877[17] = 0;
   out_3408407526246937877[18] = 0;
   out_3408407526246937877[19] = 0;
   out_3408407526246937877[20] = 0;
   out_3408407526246937877[21] = 0;
   out_3408407526246937877[22] = 0;
   out_3408407526246937877[23] = 0;
   out_3408407526246937877[24] = 0;
   out_3408407526246937877[25] = 0;
   out_3408407526246937877[26] = 0;
   out_3408407526246937877[27] = 0;
   out_3408407526246937877[28] = 0;
   out_3408407526246937877[29] = 0;
   out_3408407526246937877[30] = 0;
   out_3408407526246937877[31] = 0;
   out_3408407526246937877[32] = 0;
   out_3408407526246937877[33] = 1;
   out_3408407526246937877[34] = 0;
   out_3408407526246937877[35] = 0;
   out_3408407526246937877[36] = 0;
   out_3408407526246937877[37] = 0;
   out_3408407526246937877[38] = 0;
   out_3408407526246937877[39] = 0;
   out_3408407526246937877[40] = 0;
   out_3408407526246937877[41] = 0;
   out_3408407526246937877[42] = 0;
   out_3408407526246937877[43] = 0;
   out_3408407526246937877[44] = 0;
   out_3408407526246937877[45] = 0;
   out_3408407526246937877[46] = 0;
   out_3408407526246937877[47] = 0;
   out_3408407526246937877[48] = 0;
   out_3408407526246937877[49] = 0;
   out_3408407526246937877[50] = 0;
   out_3408407526246937877[51] = 0;
   out_3408407526246937877[52] = 0;
   out_3408407526246937877[53] = 0;
   out_3408407526246937877[54] = 0;
   out_3408407526246937877[55] = 0;
   out_3408407526246937877[56] = 1;
   out_3408407526246937877[57] = 0;
   out_3408407526246937877[58] = 0;
   out_3408407526246937877[59] = 0;
   out_3408407526246937877[60] = 0;
   out_3408407526246937877[61] = 0;
   out_3408407526246937877[62] = 0;
   out_3408407526246937877[63] = 0;
   out_3408407526246937877[64] = 0;
   out_3408407526246937877[65] = 0;
}
void h_10(double *state, double *unused, double *out_3387832074626512663) {
   out_3387832074626512663[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3387832074626512663[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3387832074626512663[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3987256872720503137) {
   out_3987256872720503137[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3987256872720503137[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3987256872720503137[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3987256872720503137[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3987256872720503137[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3987256872720503137[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3987256872720503137[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3987256872720503137[7] = 0;
   out_3987256872720503137[8] = 0;
   out_3987256872720503137[9] = 0;
   out_3987256872720503137[10] = 0;
   out_3987256872720503137[11] = 0;
   out_3987256872720503137[12] = 0;
   out_3987256872720503137[13] = 0;
   out_3987256872720503137[14] = 0;
   out_3987256872720503137[15] = 0;
   out_3987256872720503137[16] = 1;
   out_3987256872720503137[17] = 0;
   out_3987256872720503137[18] = 0;
   out_3987256872720503137[19] = 1;
   out_3987256872720503137[20] = 0;
   out_3987256872720503137[21] = 0;
   out_3987256872720503137[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3987256872720503137[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3987256872720503137[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3987256872720503137[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3987256872720503137[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3987256872720503137[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3987256872720503137[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3987256872720503137[29] = 0;
   out_3987256872720503137[30] = 0;
   out_3987256872720503137[31] = 0;
   out_3987256872720503137[32] = 0;
   out_3987256872720503137[33] = 0;
   out_3987256872720503137[34] = 0;
   out_3987256872720503137[35] = 0;
   out_3987256872720503137[36] = 0;
   out_3987256872720503137[37] = 0;
   out_3987256872720503137[38] = 0;
   out_3987256872720503137[39] = 1;
   out_3987256872720503137[40] = 0;
   out_3987256872720503137[41] = 0;
   out_3987256872720503137[42] = 1;
   out_3987256872720503137[43] = 0;
   out_3987256872720503137[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3987256872720503137[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3987256872720503137[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3987256872720503137[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3987256872720503137[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3987256872720503137[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3987256872720503137[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3987256872720503137[51] = 0;
   out_3987256872720503137[52] = 0;
   out_3987256872720503137[53] = 0;
   out_3987256872720503137[54] = 0;
   out_3987256872720503137[55] = 0;
   out_3987256872720503137[56] = 0;
   out_3987256872720503137[57] = 0;
   out_3987256872720503137[58] = 0;
   out_3987256872720503137[59] = 0;
   out_3987256872720503137[60] = 0;
   out_3987256872720503137[61] = 0;
   out_3987256872720503137[62] = 1;
   out_3987256872720503137[63] = 0;
   out_3987256872720503137[64] = 0;
   out_3987256872720503137[65] = 1;
}
void h_12(double *state, double *unused, double *out_7008879033050106886) {
   out_7008879033050106886[0] = state[0];
   out_7008879033050106886[1] = state[1];
   out_7008879033050106886[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8186674287649309027) {
   out_8186674287649309027[0] = 1;
   out_8186674287649309027[1] = 0;
   out_8186674287649309027[2] = 0;
   out_8186674287649309027[3] = 0;
   out_8186674287649309027[4] = 0;
   out_8186674287649309027[5] = 0;
   out_8186674287649309027[6] = 0;
   out_8186674287649309027[7] = 0;
   out_8186674287649309027[8] = 0;
   out_8186674287649309027[9] = 0;
   out_8186674287649309027[10] = 0;
   out_8186674287649309027[11] = 0;
   out_8186674287649309027[12] = 0;
   out_8186674287649309027[13] = 0;
   out_8186674287649309027[14] = 0;
   out_8186674287649309027[15] = 0;
   out_8186674287649309027[16] = 0;
   out_8186674287649309027[17] = 0;
   out_8186674287649309027[18] = 0;
   out_8186674287649309027[19] = 0;
   out_8186674287649309027[20] = 0;
   out_8186674287649309027[21] = 0;
   out_8186674287649309027[22] = 0;
   out_8186674287649309027[23] = 1;
   out_8186674287649309027[24] = 0;
   out_8186674287649309027[25] = 0;
   out_8186674287649309027[26] = 0;
   out_8186674287649309027[27] = 0;
   out_8186674287649309027[28] = 0;
   out_8186674287649309027[29] = 0;
   out_8186674287649309027[30] = 0;
   out_8186674287649309027[31] = 0;
   out_8186674287649309027[32] = 0;
   out_8186674287649309027[33] = 0;
   out_8186674287649309027[34] = 0;
   out_8186674287649309027[35] = 0;
   out_8186674287649309027[36] = 0;
   out_8186674287649309027[37] = 0;
   out_8186674287649309027[38] = 0;
   out_8186674287649309027[39] = 0;
   out_8186674287649309027[40] = 0;
   out_8186674287649309027[41] = 0;
   out_8186674287649309027[42] = 0;
   out_8186674287649309027[43] = 0;
   out_8186674287649309027[44] = 0;
   out_8186674287649309027[45] = 0;
   out_8186674287649309027[46] = 1;
   out_8186674287649309027[47] = 0;
   out_8186674287649309027[48] = 0;
   out_8186674287649309027[49] = 0;
   out_8186674287649309027[50] = 0;
   out_8186674287649309027[51] = 0;
   out_8186674287649309027[52] = 0;
   out_8186674287649309027[53] = 0;
   out_8186674287649309027[54] = 0;
   out_8186674287649309027[55] = 0;
   out_8186674287649309027[56] = 0;
   out_8186674287649309027[57] = 0;
   out_8186674287649309027[58] = 0;
   out_8186674287649309027[59] = 0;
   out_8186674287649309027[60] = 0;
   out_8186674287649309027[61] = 0;
   out_8186674287649309027[62] = 0;
   out_8186674287649309027[63] = 0;
   out_8186674287649309027[64] = 0;
   out_8186674287649309027[65] = 0;
}
void h_35(double *state, double *unused, double *out_6214778580612386987) {
   out_6214778580612386987[0] = state[7];
   out_6214778580612386987[1] = state[8];
   out_6214778580612386987[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7514506753735228880) {
   out_7514506753735228880[0] = 0;
   out_7514506753735228880[1] = 0;
   out_7514506753735228880[2] = 0;
   out_7514506753735228880[3] = 0;
   out_7514506753735228880[4] = 0;
   out_7514506753735228880[5] = 0;
   out_7514506753735228880[6] = 0;
   out_7514506753735228880[7] = 1;
   out_7514506753735228880[8] = 0;
   out_7514506753735228880[9] = 0;
   out_7514506753735228880[10] = 0;
   out_7514506753735228880[11] = 0;
   out_7514506753735228880[12] = 0;
   out_7514506753735228880[13] = 0;
   out_7514506753735228880[14] = 0;
   out_7514506753735228880[15] = 0;
   out_7514506753735228880[16] = 0;
   out_7514506753735228880[17] = 0;
   out_7514506753735228880[18] = 0;
   out_7514506753735228880[19] = 0;
   out_7514506753735228880[20] = 0;
   out_7514506753735228880[21] = 0;
   out_7514506753735228880[22] = 0;
   out_7514506753735228880[23] = 0;
   out_7514506753735228880[24] = 0;
   out_7514506753735228880[25] = 0;
   out_7514506753735228880[26] = 0;
   out_7514506753735228880[27] = 0;
   out_7514506753735228880[28] = 0;
   out_7514506753735228880[29] = 0;
   out_7514506753735228880[30] = 1;
   out_7514506753735228880[31] = 0;
   out_7514506753735228880[32] = 0;
   out_7514506753735228880[33] = 0;
   out_7514506753735228880[34] = 0;
   out_7514506753735228880[35] = 0;
   out_7514506753735228880[36] = 0;
   out_7514506753735228880[37] = 0;
   out_7514506753735228880[38] = 0;
   out_7514506753735228880[39] = 0;
   out_7514506753735228880[40] = 0;
   out_7514506753735228880[41] = 0;
   out_7514506753735228880[42] = 0;
   out_7514506753735228880[43] = 0;
   out_7514506753735228880[44] = 0;
   out_7514506753735228880[45] = 0;
   out_7514506753735228880[46] = 0;
   out_7514506753735228880[47] = 0;
   out_7514506753735228880[48] = 0;
   out_7514506753735228880[49] = 0;
   out_7514506753735228880[50] = 0;
   out_7514506753735228880[51] = 0;
   out_7514506753735228880[52] = 0;
   out_7514506753735228880[53] = 1;
   out_7514506753735228880[54] = 0;
   out_7514506753735228880[55] = 0;
   out_7514506753735228880[56] = 0;
   out_7514506753735228880[57] = 0;
   out_7514506753735228880[58] = 0;
   out_7514506753735228880[59] = 0;
   out_7514506753735228880[60] = 0;
   out_7514506753735228880[61] = 0;
   out_7514506753735228880[62] = 0;
   out_7514506753735228880[63] = 0;
   out_7514506753735228880[64] = 0;
   out_7514506753735228880[65] = 0;
}
void h_32(double *state, double *unused, double *out_5249153204612664783) {
   out_5249153204612664783[0] = state[3];
   out_5249153204612664783[1] = state[4];
   out_5249153204612664783[2] = state[5];
   out_5249153204612664783[3] = state[6];
}
void H_32(double *state, double *unused, double *out_380984566704161748) {
   out_380984566704161748[0] = 0;
   out_380984566704161748[1] = 0;
   out_380984566704161748[2] = 0;
   out_380984566704161748[3] = 1;
   out_380984566704161748[4] = 0;
   out_380984566704161748[5] = 0;
   out_380984566704161748[6] = 0;
   out_380984566704161748[7] = 0;
   out_380984566704161748[8] = 0;
   out_380984566704161748[9] = 0;
   out_380984566704161748[10] = 0;
   out_380984566704161748[11] = 0;
   out_380984566704161748[12] = 0;
   out_380984566704161748[13] = 0;
   out_380984566704161748[14] = 0;
   out_380984566704161748[15] = 0;
   out_380984566704161748[16] = 0;
   out_380984566704161748[17] = 0;
   out_380984566704161748[18] = 0;
   out_380984566704161748[19] = 0;
   out_380984566704161748[20] = 0;
   out_380984566704161748[21] = 0;
   out_380984566704161748[22] = 0;
   out_380984566704161748[23] = 0;
   out_380984566704161748[24] = 0;
   out_380984566704161748[25] = 0;
   out_380984566704161748[26] = 1;
   out_380984566704161748[27] = 0;
   out_380984566704161748[28] = 0;
   out_380984566704161748[29] = 0;
   out_380984566704161748[30] = 0;
   out_380984566704161748[31] = 0;
   out_380984566704161748[32] = 0;
   out_380984566704161748[33] = 0;
   out_380984566704161748[34] = 0;
   out_380984566704161748[35] = 0;
   out_380984566704161748[36] = 0;
   out_380984566704161748[37] = 0;
   out_380984566704161748[38] = 0;
   out_380984566704161748[39] = 0;
   out_380984566704161748[40] = 0;
   out_380984566704161748[41] = 0;
   out_380984566704161748[42] = 0;
   out_380984566704161748[43] = 0;
   out_380984566704161748[44] = 0;
   out_380984566704161748[45] = 0;
   out_380984566704161748[46] = 0;
   out_380984566704161748[47] = 0;
   out_380984566704161748[48] = 0;
   out_380984566704161748[49] = 1;
   out_380984566704161748[50] = 0;
   out_380984566704161748[51] = 0;
   out_380984566704161748[52] = 0;
   out_380984566704161748[53] = 0;
   out_380984566704161748[54] = 0;
   out_380984566704161748[55] = 0;
   out_380984566704161748[56] = 0;
   out_380984566704161748[57] = 0;
   out_380984566704161748[58] = 0;
   out_380984566704161748[59] = 0;
   out_380984566704161748[60] = 0;
   out_380984566704161748[61] = 0;
   out_380984566704161748[62] = 0;
   out_380984566704161748[63] = 0;
   out_380984566704161748[64] = 0;
   out_380984566704161748[65] = 0;
   out_380984566704161748[66] = 0;
   out_380984566704161748[67] = 0;
   out_380984566704161748[68] = 0;
   out_380984566704161748[69] = 0;
   out_380984566704161748[70] = 0;
   out_380984566704161748[71] = 0;
   out_380984566704161748[72] = 1;
   out_380984566704161748[73] = 0;
   out_380984566704161748[74] = 0;
   out_380984566704161748[75] = 0;
   out_380984566704161748[76] = 0;
   out_380984566704161748[77] = 0;
   out_380984566704161748[78] = 0;
   out_380984566704161748[79] = 0;
   out_380984566704161748[80] = 0;
   out_380984566704161748[81] = 0;
   out_380984566704161748[82] = 0;
   out_380984566704161748[83] = 0;
   out_380984566704161748[84] = 0;
   out_380984566704161748[85] = 0;
   out_380984566704161748[86] = 0;
   out_380984566704161748[87] = 0;
}
void h_13(double *state, double *unused, double *out_3644699877240433340) {
   out_3644699877240433340[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3644699877240433340[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3644699877240433340[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1662231771709590587) {
   out_1662231771709590587[0] = 0;
   out_1662231771709590587[1] = 0;
   out_1662231771709590587[2] = 0;
   out_1662231771709590587[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1662231771709590587[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1662231771709590587[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1662231771709590587[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1662231771709590587[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1662231771709590587[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1662231771709590587[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1662231771709590587[10] = 0;
   out_1662231771709590587[11] = 0;
   out_1662231771709590587[12] = 0;
   out_1662231771709590587[13] = 0;
   out_1662231771709590587[14] = 0;
   out_1662231771709590587[15] = 0;
   out_1662231771709590587[16] = 0;
   out_1662231771709590587[17] = 0;
   out_1662231771709590587[18] = 0;
   out_1662231771709590587[19] = 0;
   out_1662231771709590587[20] = 0;
   out_1662231771709590587[21] = 0;
   out_1662231771709590587[22] = 0;
   out_1662231771709590587[23] = 0;
   out_1662231771709590587[24] = 0;
   out_1662231771709590587[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1662231771709590587[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1662231771709590587[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1662231771709590587[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1662231771709590587[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1662231771709590587[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1662231771709590587[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1662231771709590587[32] = 0;
   out_1662231771709590587[33] = 0;
   out_1662231771709590587[34] = 0;
   out_1662231771709590587[35] = 0;
   out_1662231771709590587[36] = 0;
   out_1662231771709590587[37] = 0;
   out_1662231771709590587[38] = 0;
   out_1662231771709590587[39] = 0;
   out_1662231771709590587[40] = 0;
   out_1662231771709590587[41] = 0;
   out_1662231771709590587[42] = 0;
   out_1662231771709590587[43] = 0;
   out_1662231771709590587[44] = 0;
   out_1662231771709590587[45] = 0;
   out_1662231771709590587[46] = 0;
   out_1662231771709590587[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1662231771709590587[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1662231771709590587[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1662231771709590587[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1662231771709590587[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1662231771709590587[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1662231771709590587[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1662231771709590587[54] = 0;
   out_1662231771709590587[55] = 0;
   out_1662231771709590587[56] = 0;
   out_1662231771709590587[57] = 0;
   out_1662231771709590587[58] = 0;
   out_1662231771709590587[59] = 0;
   out_1662231771709590587[60] = 0;
   out_1662231771709590587[61] = 0;
   out_1662231771709590587[62] = 0;
   out_1662231771709590587[63] = 0;
   out_1662231771709590587[64] = 0;
   out_1662231771709590587[65] = 0;
}
void h_14(double *state, double *unused, double *out_3795054158466794246) {
   out_3795054158466794246[0] = state[10];
   out_3795054158466794246[1] = state[11];
   out_3795054158466794246[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3408407526246937877) {
   out_3408407526246937877[0] = 0;
   out_3408407526246937877[1] = 0;
   out_3408407526246937877[2] = 0;
   out_3408407526246937877[3] = 0;
   out_3408407526246937877[4] = 0;
   out_3408407526246937877[5] = 0;
   out_3408407526246937877[6] = 0;
   out_3408407526246937877[7] = 0;
   out_3408407526246937877[8] = 0;
   out_3408407526246937877[9] = 0;
   out_3408407526246937877[10] = 1;
   out_3408407526246937877[11] = 0;
   out_3408407526246937877[12] = 0;
   out_3408407526246937877[13] = 0;
   out_3408407526246937877[14] = 0;
   out_3408407526246937877[15] = 0;
   out_3408407526246937877[16] = 0;
   out_3408407526246937877[17] = 0;
   out_3408407526246937877[18] = 0;
   out_3408407526246937877[19] = 0;
   out_3408407526246937877[20] = 0;
   out_3408407526246937877[21] = 0;
   out_3408407526246937877[22] = 0;
   out_3408407526246937877[23] = 0;
   out_3408407526246937877[24] = 0;
   out_3408407526246937877[25] = 0;
   out_3408407526246937877[26] = 0;
   out_3408407526246937877[27] = 0;
   out_3408407526246937877[28] = 0;
   out_3408407526246937877[29] = 0;
   out_3408407526246937877[30] = 0;
   out_3408407526246937877[31] = 0;
   out_3408407526246937877[32] = 0;
   out_3408407526246937877[33] = 1;
   out_3408407526246937877[34] = 0;
   out_3408407526246937877[35] = 0;
   out_3408407526246937877[36] = 0;
   out_3408407526246937877[37] = 0;
   out_3408407526246937877[38] = 0;
   out_3408407526246937877[39] = 0;
   out_3408407526246937877[40] = 0;
   out_3408407526246937877[41] = 0;
   out_3408407526246937877[42] = 0;
   out_3408407526246937877[43] = 0;
   out_3408407526246937877[44] = 0;
   out_3408407526246937877[45] = 0;
   out_3408407526246937877[46] = 0;
   out_3408407526246937877[47] = 0;
   out_3408407526246937877[48] = 0;
   out_3408407526246937877[49] = 0;
   out_3408407526246937877[50] = 0;
   out_3408407526246937877[51] = 0;
   out_3408407526246937877[52] = 0;
   out_3408407526246937877[53] = 0;
   out_3408407526246937877[54] = 0;
   out_3408407526246937877[55] = 0;
   out_3408407526246937877[56] = 1;
   out_3408407526246937877[57] = 0;
   out_3408407526246937877[58] = 0;
   out_3408407526246937877[59] = 0;
   out_3408407526246937877[60] = 0;
   out_3408407526246937877[61] = 0;
   out_3408407526246937877[62] = 0;
   out_3408407526246937877[63] = 0;
   out_3408407526246937877[64] = 0;
   out_3408407526246937877[65] = 0;
}
void h_33(double *state, double *unused, double *out_7123440364411686312) {
   out_7123440364411686312[0] = state[16];
   out_7123440364411686312[1] = state[17];
   out_7123440364411686312[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4363949749096371276) {
   out_4363949749096371276[0] = 0;
   out_4363949749096371276[1] = 0;
   out_4363949749096371276[2] = 0;
   out_4363949749096371276[3] = 0;
   out_4363949749096371276[4] = 0;
   out_4363949749096371276[5] = 0;
   out_4363949749096371276[6] = 0;
   out_4363949749096371276[7] = 0;
   out_4363949749096371276[8] = 0;
   out_4363949749096371276[9] = 0;
   out_4363949749096371276[10] = 0;
   out_4363949749096371276[11] = 0;
   out_4363949749096371276[12] = 0;
   out_4363949749096371276[13] = 0;
   out_4363949749096371276[14] = 0;
   out_4363949749096371276[15] = 0;
   out_4363949749096371276[16] = 1;
   out_4363949749096371276[17] = 0;
   out_4363949749096371276[18] = 0;
   out_4363949749096371276[19] = 0;
   out_4363949749096371276[20] = 0;
   out_4363949749096371276[21] = 0;
   out_4363949749096371276[22] = 0;
   out_4363949749096371276[23] = 0;
   out_4363949749096371276[24] = 0;
   out_4363949749096371276[25] = 0;
   out_4363949749096371276[26] = 0;
   out_4363949749096371276[27] = 0;
   out_4363949749096371276[28] = 0;
   out_4363949749096371276[29] = 0;
   out_4363949749096371276[30] = 0;
   out_4363949749096371276[31] = 0;
   out_4363949749096371276[32] = 0;
   out_4363949749096371276[33] = 0;
   out_4363949749096371276[34] = 0;
   out_4363949749096371276[35] = 0;
   out_4363949749096371276[36] = 0;
   out_4363949749096371276[37] = 0;
   out_4363949749096371276[38] = 0;
   out_4363949749096371276[39] = 1;
   out_4363949749096371276[40] = 0;
   out_4363949749096371276[41] = 0;
   out_4363949749096371276[42] = 0;
   out_4363949749096371276[43] = 0;
   out_4363949749096371276[44] = 0;
   out_4363949749096371276[45] = 0;
   out_4363949749096371276[46] = 0;
   out_4363949749096371276[47] = 0;
   out_4363949749096371276[48] = 0;
   out_4363949749096371276[49] = 0;
   out_4363949749096371276[50] = 0;
   out_4363949749096371276[51] = 0;
   out_4363949749096371276[52] = 0;
   out_4363949749096371276[53] = 0;
   out_4363949749096371276[54] = 0;
   out_4363949749096371276[55] = 0;
   out_4363949749096371276[56] = 0;
   out_4363949749096371276[57] = 0;
   out_4363949749096371276[58] = 0;
   out_4363949749096371276[59] = 0;
   out_4363949749096371276[60] = 0;
   out_4363949749096371276[61] = 0;
   out_4363949749096371276[62] = 1;
   out_4363949749096371276[63] = 0;
   out_4363949749096371276[64] = 0;
   out_4363949749096371276[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2537912128445620253) {
  H(in_vec, out_2537912128445620253);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1659985015181901835) {
  err_fun(nom_x, delta_x, out_1659985015181901835);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8271410697931862202) {
  inv_err_fun(nom_x, true_x, out_8271410697931862202);
}
void live_H_mod_fun(double *state, double *out_5531808134556081331) {
  H_mod_fun(state, out_5531808134556081331);
}
void live_f_fun(double *state, double dt, double *out_313123907282535158) {
  f_fun(state,  dt, out_313123907282535158);
}
void live_F_fun(double *state, double dt, double *out_7439547743424380131) {
  F_fun(state,  dt, out_7439547743424380131);
}
void live_h_4(double *state, double *unused, double *out_5777872899246538591) {
  h_4(state, unused, out_5777872899246538591);
}
void live_H_4(double *state, double *unused, double *out_3167217879617347232) {
  H_4(state, unused, out_3167217879617347232);
}
void live_h_9(double *state, double *unused, double *out_3795054158466794246) {
  h_9(state, unused, out_3795054158466794246);
}
void live_H_9(double *state, double *unused, double *out_3408407526246937877) {
  H_9(state, unused, out_3408407526246937877);
}
void live_h_10(double *state, double *unused, double *out_3387832074626512663) {
  h_10(state, unused, out_3387832074626512663);
}
void live_H_10(double *state, double *unused, double *out_3987256872720503137) {
  H_10(state, unused, out_3987256872720503137);
}
void live_h_12(double *state, double *unused, double *out_7008879033050106886) {
  h_12(state, unused, out_7008879033050106886);
}
void live_H_12(double *state, double *unused, double *out_8186674287649309027) {
  H_12(state, unused, out_8186674287649309027);
}
void live_h_35(double *state, double *unused, double *out_6214778580612386987) {
  h_35(state, unused, out_6214778580612386987);
}
void live_H_35(double *state, double *unused, double *out_7514506753735228880) {
  H_35(state, unused, out_7514506753735228880);
}
void live_h_32(double *state, double *unused, double *out_5249153204612664783) {
  h_32(state, unused, out_5249153204612664783);
}
void live_H_32(double *state, double *unused, double *out_380984566704161748) {
  H_32(state, unused, out_380984566704161748);
}
void live_h_13(double *state, double *unused, double *out_3644699877240433340) {
  h_13(state, unused, out_3644699877240433340);
}
void live_H_13(double *state, double *unused, double *out_1662231771709590587) {
  H_13(state, unused, out_1662231771709590587);
}
void live_h_14(double *state, double *unused, double *out_3795054158466794246) {
  h_14(state, unused, out_3795054158466794246);
}
void live_H_14(double *state, double *unused, double *out_3408407526246937877) {
  H_14(state, unused, out_3408407526246937877);
}
void live_h_33(double *state, double *unused, double *out_7123440364411686312) {
  h_33(state, unused, out_7123440364411686312);
}
void live_H_33(double *state, double *unused, double *out_4363949749096371276) {
  H_33(state, unused, out_4363949749096371276);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
